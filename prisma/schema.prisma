generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model conec {
  id              Int         @id @default(autoincrement())
  access_token    String 
  refresh_token   String
}


model login {
  id       Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  password String
  admin    Boolean  @default(false)
  role     String
  unity    String[]
}

model person {
  name                String
  owner               String
  aluno               String
  unidade             String
  contrato            String   @id
  background          String
  classe              String
  subclasse           String
  tmStatus            String
  tmVencimento        String
  tmValor             String
  ppVencimento        String
  ppStatus            String
  mdValor             String
  mdStatus            String
  acFormato           String
  tipoMatricula       String
  tipoComissao        String
  comissaoValor       String
  aprovacaoADM        String
  responsavelADM      String
  aprovacaoDirecao    String
  diretorResponsavel  String
  paDATA              String
  inicioContrato      String
  fimContrato         String
  tel                 String
  email               String
  Valor               Float
  id                  Int
  paStatus            String
  situMatric          String
  acStatus            String
  alunoNascimento     String
  cargaHoraria        String
  contratoStatus      String
  dataComissionamento String
  dataMatricula       String
  dataValidacao       String
  formatoAula         String
  horarioFim          String
  horarioInicio       String
  idadeAluno          String
  materialDidatico    String[]
  mdData              String
  mdDesconto          String
  mdFormaPg           String
  mdParcelas          String
  mdVencimento        String
  nivelamento         String
  observacao          Json[]
  ppData              String
  ppDesconto          String
  ppFormaPg           String
  ppParcelas          String
  ppValor             String
  tempoContrato       String
  tipoModalidade      String
  tmData              String
  tmDesconto          String
  tmFormaPg           String
  tmParcelas          String
  dataAC              Json[]
  diaAula             String[]
  comissaoStatus      String
  professor           String[]
  curso               String
}


model unities {
  id         String    @id @default(uuid())
  name       String
}

model historic {
  id             String    @id @default(uuid())
  responsible    String
  date           DateTime  @default(now())
  information    Json
}

model Orders {
  id          String   @id  @default(uuid())
  code        String
  orders      Json[]
  arrived     Boolean @default(false)
  unity       String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
}



enum TYPE {
String
Number
Date 
Select
MultiSelect
}

model customFields {
  id          String   @id  @default(uuid())
  label       String
  type        TYPE     @default(String)
  order       Int
  required    Boolean  @default(false)
  created_at  DateTime @default(now())
  options     Json?
  for         String
}

// model logs {
// id       String  @id @default(uuid()) 
// name     String
// email    String   @unique
// password String
// admin    Boolean  @default(false)
// role     String
// unity    String[]
// created_at DateTime  @default(now())
// updated_at DateTime  @updatedAt
// active   Boolean @default(true)

// persons  contracts[]
// }
// model contracts {
// id      String  @id @default(uuid()) 
// name    String 

// customFields  Json

// created_at DateTime  @default(now())
// updated_at DateTime  @updatedAt

// userId  String 
// user    logs  @relation(fields: [userId], references: [id])

// servicesId  servicesOrProducts[]
// }

// enum TYPESERVICE {
//   Service
//   Product
// }
// model servicesOrProducts {
// id      String  @id @default(uuid()) 
// name    String 
// description String?
// value       Decimal?
// type      TYPESERVICE
// created_at DateTime  @default(now())
// updated_at DateTime  @updatedAt


// // contractId String?
// contracts contracts[] 
// }